import Config from "./config";
import InlineConfig from "./inline_config";
import { LegacyLinterConfig, LegacyRuleDefinition } from "../read-config";
import { Document } from "@linthtml/dom-utils/lib/dom_elements";
import Issue from "../issue";
export default class Linter {
    rules: Config;
    config: LegacyLinterConfig;
    inlineConfig: InlineConfig;
    constructor(_rules: LegacyRuleDefinition[] | null, ..._config: LegacyLinterConfig[]);
    use(plugin: {
        rules: LegacyRuleDefinition[];
    }): void;
    /**
     * Lints the HTML with the options supplied in the environments setup.
     * @param {String} html - the html as a string to lint.
     * @returns {import('../issue')[]}
     */
    lint(html: string): Promise<Issue[]>;
    lintDom(dom: Document, opts: unknown): Issue[];
    resetRules(opts?: unknown): Issue[];
    setupInlineConfigs(dom: Document): Issue[];
}
//# sourceMappingURL=linter.d.ts.map