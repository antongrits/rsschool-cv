"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dom_utils_1 = require("@linthtml/dom-utils");
const RULE_NAME = "lang-style";
function validateConfig(style) {
    if (typeof style === "string" && style !== "case") {
        throw new Error(`Configuration for rule "${RULE_NAME}" is invalid: Only "case" is accepted as string value`);
    }
    if (typeof style !== "boolean" && typeof style !== "string") {
        throw new Error(`Configuration for rule "${RULE_NAME}" is invalid: Expected boolean got ${typeof style}`);
    }
    return style;
}
function lint(node, lang_case, { report }) {
    if ((0, dom_utils_1.is_tag_node)(node) && node.name === "html" && (0, dom_utils_1.has_non_empty_attribute)(node, "lang")) {
        const lang = (0, dom_utils_1.attribute_value)(node, "lang");
        // TODO: Remove after `raw-ignore-text` refacto
        if (/^Â¤+$/.test(lang.chars)) {
            return;
        }
        const valid = (0, dom_utils_1.check_lang_attribute)(lang); // WHAT???
        if (valid === 1) {
            report({
                code: "E038",
                position: lang.loc,
                meta: {
                    data: {
                        lang: lang.chars
                    }
                }
            });
        }
        if (lang_case === "case" && valid === 2) {
            report({
                code: "E039",
                position: lang.loc,
                meta: {
                    data: {
                        lang: lang.chars
                    }
                }
            });
        }
    }
}
exports.default = {
    name: RULE_NAME,
    validateConfig,
    lint
};
