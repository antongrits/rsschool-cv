"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dom_utils_1 = require("@linthtml/dom-utils");
const RULE_NAME = "tag-bans";
function validateConfig(options) {
    const typeError = (type) => `Configuration for rule "${RULE_NAME}" is invalid: Expected string or string[] got ${type}`;
    if (Array.isArray(options)) {
        return options.forEach((option) => {
            const type = typeof option;
            if (type !== "string") {
                throw new Error(typeError(`${type}[]`));
            }
        });
    }
    if (typeof options !== "string") {
        throw new Error(typeError(typeof options));
    }
}
function mut_config(options) {
    if (Array.isArray(options)) {
        return options.map((option) => option.toLowerCase());
    }
    if (typeof options === "string") {
        options = [options.toLowerCase()];
    }
    return options;
}
function lint(node, config, { report }) {
    if ((0, dom_utils_1.is_tag_node)(node)) {
        const banned_tags = mut_config(config);
        if (banned_tags.indexOf(node.name) !== -1) {
            report({
                code: "E016",
                position: node.open.loc,
                meta: {
                    data: {
                        tag: node.name
                    }
                }
            });
        }
    }
}
exports.default = {
    name: RULE_NAME,
    validateConfig,
    lint
};
