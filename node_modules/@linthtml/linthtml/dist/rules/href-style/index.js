"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dom_utils_1 = require("@linthtml/dom-utils");
const validate_option_1 = require("../../validate_option");
const RULE_NAME = "href-style";
function lint(node, format, { report }) {
    var _a;
    if ((0, dom_utils_1.is_tag_node)(node) && node.name === "a") {
        // TODO: Should return an issue, since a without href is bad
        // TODO: Check empty href attributes
        if ((0, dom_utils_1.has_attribute)(node, "href") === false) {
            return;
        }
        const href_value = (_a = (0, dom_utils_1.attribute_value)(node, "href")) === null || _a === void 0 ? void 0 : _a.chars;
        // TODO: Remove after `raw-ignore-text` refacto
        if (/^Â¤+$/.test(href_value)) {
            return;
        }
        // Allow fragment-only URLs
        const is_fragment = href_value.startsWith("#");
        // Link must be absolute if specified format is absolute
        const is_absolute = href_value.search("://") !== -1;
        const match_format = is_absolute === (format === "absolute");
        if (is_fragment === false && match_format === false) {
            const attribute = (0, dom_utils_1.get_attribute)(node, "href");
            report({
                code: "E009",
                position: attribute.loc,
                meta: {
                    data: {
                        format: format
                    }
                }
            });
        }
    }
}
exports.default = {
    name: RULE_NAME,
    lint,
    validateConfig: (0, validate_option_1.create_list_value_validator)(RULE_NAME, ["absolute", "relative"], false)
};
