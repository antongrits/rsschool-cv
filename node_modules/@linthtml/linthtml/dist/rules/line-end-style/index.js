"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dom_utils_1 = require("@linthtml/dom-utils");
const validate_option_1 = require("../../validate_option");
const RULE_NAME = "line-end-style";
const formats = {
    cr: /(^|[^\n\r])\r$/,
    lf: /(^|[^\n\r])\n$/,
    crlf: /(^|[^\n\r])\r\n$/
};
// TODO: Check what happen if no format provided
function lint(node, format, { report }) {
    if ((0, dom_utils_1.is_text_node)(node)) {
        const lines = (0, dom_utils_1.get_text_lines)(node, true).filter(({ text }) => !formats[format].test(text));
        Object.keys(formats)
            .filter((_) => _ !== format)
            .forEach((format) => {
            lines
                .filter(({ text }) => formats[format].test(text))
                .forEach((line) => {
                const start_line = node.loc.start.line + line.offset;
                const start_column = line.offset === 0 ? node.loc.start.column : 1;
                report({
                    code: "E015",
                    position: {
                        start: {
                            line: start_line,
                            column: 1
                        },
                        end: {
                            line: start_line,
                            column: start_column + line.text.length
                        }
                    },
                    meta: {
                        data: {
                            format
                        }
                    }
                });
            });
        });
    }
}
exports.default = {
    name: RULE_NAME,
    validateConfig: (0, validate_option_1.create_list_value_validator)(RULE_NAME, ["cr", "lf", "crlf"], false),
    lint
};
