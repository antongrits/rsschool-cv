"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dom_utils_1 = require("@linthtml/dom-utils");
const RULE_NAME = "id-no-dup";
function lint(node, _config, { report }) {
    if ((0, dom_utils_1.is_tag_node)(node) && (0, dom_utils_1.has_non_empty_attribute)(node, "id")) {
        const id = (0, dom_utils_1.attribute_value)(node, "id");
        // TODO: Remove after `raw-ignore-text` refacto
        if (/^Â¤+$/.test(id.chars)) {
            return;
        }
        // node has a duplicate id
        // @ts-ignore
        const saved_id = this.idMap.get(id.chars);
        if (saved_id) {
            report({
                code: "E012",
                position: id.loc,
                meta: {
                    data: {
                        id: id.chars,
                        line: saved_id.loc.start.line,
                        column: saved_id.loc.start.column
                    }
                }
            });
        }
        // if we haven't seen the id before, remember it
        // and pass the node
        // @ts-ignore
        this.idMap.set(id.chars, id);
    }
}
function end() {
    // wipe previous table
    // @ts-ignore
    this.idMap = new Map();
    return [];
}
exports.default = {
    name: RULE_NAME,
    lint,
    end,
    // @ts-ignore
    idMap: new Map() // TODO: Convert rules to class to fix this issue?
};
